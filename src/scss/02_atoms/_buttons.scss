@mixin btn() {
  align-items: center;
  align-content: center;
  align-self: center;
  border: 2px solid transparent;
  border-radius: map-get($formConfig, buttonHeight) * 2;
  cursor: pointer;
  display: flex;
  font-family: font(heavy);
  font-size: 14px;
  justify-content: center;
  letter-spacing: 0.8px;
  height: map-get($formConfig, buttonHeight);
  margin: 5px auto;
  min-width: map-get($formConfig, buttonMinWidth);
  outline: none;
  overflow: hidden;
  padding: 0 25px;
  position: relative;
  text-transform: uppercase;
  transition: background 0.1s ease-in-out, border 0.1s ease-in-out, color 0.1s ease-in-out, transform 0.1s ease-in-out;
  will-change: background, border, color, transform;
  white-space: nowrap;

  & + & {
    margin-left: 15px;
  }

  &[disabled],
  &.is-disabled {
    opacity: map-get($formConfig, buttonDisabledOpacity);
    pointer-events: none;
  }

  span {
    font-family: font(heavy);
    line-height: 100%;
    margin-top: 2px;
    position: relative;
    transition: all cubic-bezier(0.694, 0.048, 0.335, 1) 0.25s;
    z-index: 1;
  }
}

@mixin btnSmall() {
  font-size: 12px;
  line-height: map-get($formConfig, buttonHeightSmall);
  height: map-get($formConfig, buttonHeightSmall);
  min-width: map-get($formConfig, buttonMinWidthSmall);

  .a-btn__icon {
    margin-top: -2px;
    margin: 0 7px;
  }
}

@mixin btnPrimary() {
  background: color(brandAlt);
  border: none;
  color: color(textAlt, light);
  height: map-get($formConfig, buttonHeight);

  &:after {
    background: color(brandAlt, dark);
    border-radius: map-get($formConfig, buttonHeight) * 2;
    content: "";
    display: block;
    height: map-get($formConfig, buttonHeight);
    left: 0;
    position: absolute;
    transform: translate3d(-100%, 0, 0);
    transition: all cubic-bezier(0.694, 0.048, 0.335, 1) 0.4s;
    width: 100%;
    z-index: 0;
  }

  &:hover:after {
    transform: translate3d(0%, 0, 0);
  }

  &.a-btn--dark {
    background-color: color(background);
    color: color(backgroundAlt, light);

    &:after {
      background: rgba(color(shape, base), 0.5);
    }
  }
}

@mixin btnSecondary() {
  background: color(background);
  border-color: color(brandAlt);
  color: color(brandAlt);

  &:hover {
    border-color: lighten(color(brandAlt), 5%);
    color: lighten(color(brandAlt), 5%);
  }

  &.a-btn--dark {
    background: transparent;
    border-color: color(background);
    color: color(textAlt, light);

    &:hover {
      background: rgba(color(background), 0.1);
    }
  }
}

@mixin btnTertiary() {
  background: color(background);
  border-color: color(shape);
  color: color(brandAlt);

  &:hover {
    border-color: color(brandAlt);
  }

  &.a-btn--dark {
    background: transparent;
    border-color: rgba(color(background), 0.3);
    color: color(textAlt, light);

    &:hover {
      background: rgba(color(background), 0.1);
    }
  }
}

@mixin btnAttention() {
  background: color(background);
  border-color: color(shape);
  color: color(error);

  &:hover {
    border-color: color(error);
  }

  &.a-btn--dark {
    background: transparent;
    border-color: rgba(color(background), 0.3);
  }

  &.a-btn--dark:hover {
    background: rgba(color(error), 1);
    border-color: color(error);
    color: color(textAlt, light);
  }
}

@mixin btnCallout() {
  background: color(action, base);
  border-color: color(action, base);
  color: color(textAlt, light);

  &:after {
    color: color(textAlt, light);
    content: "\e901";
    display: block;
    font-family: "pyxisIconset";
    height: 20px;
    line-height: 20px;
    opacity: 0;
    position: absolute;
    transform: translateY(-50%) translateX(-5px);
    transition: all cubic-bezier(0.694, 0.048, 0.335, 1) 0.25s;
    right: 15px;
    top: 50%;
    width: 20px;
    z-index: 9;
  }

  &:hover {
    background: color(action, dark);
    border-color: color(action, dark);

    span {
      transform: translateX(-10px);
    }

    &:after {
      opacity: 1;
      transform: translateY(-50%) translateX(0px);
    }
  }
}

.a-btn {
  @include btn;
}

.a-btn.a-btn--primary {
  @include btnPrimary;
}

.a-btn.a-btn--secondary {
  @include btnSecondary;
}

.a-btn.a-btn--tertiary {
  @include btnTertiary;
}

.a-btn.a-btn--attention {
  @include btnAttention;
}

.a-btn.a-btn--callout {
  @include btnCallout;
}

.a-btn.a-btn--small {
  @include btnSmall;
}

$btnsBreakpoints: xsmall small medium large;

@each $lowerBound in $btnsBreakpoints {
  $index: index($btnsBreakpoints, $lowerBound);
  $upperBound: nth(nth($breakpoints, $index + 1), 1);

  @if $upperBound {
    .a-btn.a-btn--smallOnBreakpoint#{capitalize($lowerBound)} {
      @include mqBetween($lowerBound, $upperBound) {
        @include btnSmall;
      }
    }
  }
}
