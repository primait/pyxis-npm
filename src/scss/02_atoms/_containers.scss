$gutter: rem(20px);

.a-container {
  display: flex;
  margin: 0 auto;
  width: calc(100% - #{$gutter} - #{$gutter});

  @each $containerKey, $size in $containerConfig {
    $bpIndex: 1;
    $bpLength: length($breakpoints);

    @each $bpKey, $bpSize in $breakpoints {
      @include mq($bpKey) {
        max-width: map-get($containerConfig, $bpKey);
        width: 100%;
      }
    }
  }
}

.a-containerFluid {
  display: flex;
  margin: 0 auto;
  width: 100%;
}

/**
    .a-containerOnBp[breakpoint]

    a-container spacing on specific breakpoint boundary
 */
$bpIndex: 1;
$bpLength: length($breakpoints);

@each $bpKey, $bpSize in $breakpoints {
  .a-containerOnBp#{capitalize($bpKey)} {
    @if ($bpIndex + 1) <= $bpLength {
      $nextBpKey: nth(nth($breakpoints, ($bpIndex + 1)), 1);
      @include mqBetween($bpKey, $nextBpKey) {
        max-width: map-get($containerConfig, $bpKey);
        width: 100%;
      }
    }
    @else {
      @include mq($bpKey) {
        max-width: map-get($containerConfig, $bpKey);
        width: 100%;
      }
    }

  }

  $bpIndex: $bpIndex + 1;
}



/**
    .a-container-fluidOnBp[breakpoint]

    a-container-fluid spacing on specific breakpoint boundary
 */
$bpIndex: 1;
$bpLength: length($breakpoints);

@each $bpKey, $bpSize in $breakpoints {
  .a-containerFluidOnBp#{capitalize($bpKey)} {
    @if ($bpIndex + 1) <= $bpLength {
      $nextBpKey: nth(nth($breakpoints, ($bpIndex + 1)), 1);
      @include mqBetween($bpKey, $nextBpKey) {
        max-width: 100%;
        width: 100%;
      }
    }
    @else {
      @include mq($bpKey) {
        max-width: 100%;
        width: 100%;
      }
    }

  }

  $bpIndex: $bpIndex + 1;
}
