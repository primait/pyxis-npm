$radioButtonConfig: (
  backgroundColor: get($formFieldStateConfig, default, background),
  borderWidth: rem(1px),
  boxShadow: boxShadow(small),
  fontSize: size(small),
  lineHeight: lineHeight(xsmall),
  paddingBottom: rem(10px),
  paddingLeft: rem(15px),
  paddingRight: rem(15px),
  paddingTop: rem(10px),
  subtitleColor: color(text),
  titleColor: color(text, dark),
  fontFamily: (
    base: font(base),
    heavy: font(heavy),
  ),
  selected: (
    backgroundColor: color(brandAlt, light),
  ),
  disabled: (
    background: rgba(color(shape, base), 0.3),
    borderColor: transparent,
    color: rgba(color(text, dark), 0.5),
    opacity: 0.6,
  ),
  breakpoints: (
    base: (
      marginLeft: 0,
      marginTop: rem(10px),
    ),
    xsmall: (
      marginLeft: 0,
      marginTop: rem(10px),
    ),
    small: (
      marginLeft: rem(20px),
      marginTop: 0,
    )
  )
) !default;

.form-radio-button-options {
  display: flex;
  min-height: get($formFieldStyleConfig, height);
  width: 100%;
  flex-flow: column;
  align-items: center;

  @include mq(small) {
    flex-flow: row;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: stretch;
  }
}

.form-radio-button {
  background-color: get($radioButtonConfig, backgroundColor);
  border-color: transparent;
  border-radius: get($formFieldStyleConfig, borderRadius);
  border-style: solid;
  border-width: get($radioButtonConfig, borderWidth);
  box-shadow: get($radioButtonConfig, boxShadow);
  cursor: pointer;
  display: flex;
  flex: 1;
  flex-direction: column;
  font-family: get($radioButtonConfig, fontFamily, base);
  justify-content: center;
  min-height: get($formFieldStyleConfig, height);
  padding-bottom: get($radioButtonConfig, paddingBottom);
  padding-left: get($radioButtonConfig, paddingLeft);
  padding-right: get($radioButtonConfig, paddingRight);
  padding-top: get($radioButtonConfig, paddingTop);
  transition: border 0.2s ease-in-out, background-color 0.2s ease-in-out;
  width: 100%;

  &:hover {
    border-color: get($formFieldStateConfig, focus, stateColor);
  }

  & + & {
    @each $bp, $bpConfig in get($radioButtonConfig, breakpoints) {
      @include mq($bp) {
        margin-left: get($bpConfig, marginLeft);
        margin-top: get($bpConfig, marginTop);
      }
    }
  }

  &.has-subtitle {
    justify-content: flex-start;
  }

  &.is-selected {
    background-color: get($radioButtonConfig, selected, backgroundColor);
    border-color: get($formFieldStateConfig, focus, stateColor);

  }

  &.is-selected[disabled],
  &.is-selected.is-disabled {
    background-color: get($radioButtonConfig, selected, backgroundColor);
    border-color: get($formFieldStateConfig, focus, stateColor);
    color: get($radioButtonConfig, disabled, color);
    opacity: get($radioButtonConfig, disabled, opacity);

    &:before {
      display: none;
    }
  }

  &.has-warning {
    border-color: get($formFieldStateConfig, warning, stateColor);
  }

  &.has-error {
    border-color: get($formFieldStateConfig, error, stateColor);
  }

  &[disabled],
  &.is-disabled {
    background-color: get($radioButtonConfig, disabled, background);
    border-color: get($radioButtonConfig, disabled, borderColor);
    color: get($radioButtonConfig, disabled, color);
    cursor: default;
    opacity: get($radioButtonConfig, disabled, opacity);

    &:before {
      display: none;
    }
  }

  &.has-subtitle {
    @include mq(small) {
      min-width: rem(250px);
    }
  }

  .form-row[data-children-count="1"] & {
    @include mq(small) {
      max-width: rem(150px);
    }
  }
}

.form-radio-button__title {
  color: get($radioButtonConfig, titleColor);
  font-size: get($radioButtonConfig, fontSize);
  text-align: center;

  .form-radio-button.has-subtitle & {
    font-family: get($radioButtonConfig, fontFamily, heavy);
    text-align: left;
  }
}

.form-radio-button__subtitle {
  color: get($radioButtonConfig, subtitleColor);
  font-size: get($radioButtonConfig, fontSize);
  line-height: get($radioButtonConfig, lineHeight);
}
