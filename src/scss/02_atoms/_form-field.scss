.a-form-field {
  align-items: flex-start;
  border-radius: map-get($formConfig, borderRadius);
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  min-height: 70px;
  padding: map-get($formConfig, formFieldPadding);
  position: relative;
  transition: background 0.3s;

  &:hover {
    @include mq(medium) {
      background: color(background, dark);
    }
  }
}

.a-form-field__input,
.a-form-field__date,
.a-form-field__textarea,
.a-form-field__select,
.a-form-field__custom-select,
.a-form-field__autocomplete {
  font-family: font(light);
  font-size: 14px;
  width: 100%;
  outline: none;

  @include mq(small) {
    width: map-get($formConfig, fieldMaxWidth);

    &.is-small {
      max-width: map-get($formConfig, fieldMaxWidthSmall) - (map-get($formConfig, fieldMargin) * 1.5);
    }

    &.is-medium {
      max-width: map-get($formConfig, fieldMaxWidthMedium) - map-get($formConfig, fieldMargin);
    }

    &.is-large {
      max-width: map-get($formConfig, fieldMaxWidthLarge);
    }
  }
  

  .a-form-field.has-error & {
    border-color: color(error);
  }

  .a-form-field.has-warning:not(.has-error) & {
    border-color: color(alert, dark);
  }

  .a-form-field.is-valid & {
    border-color: color(brandAlt, dark);
  }


  // Field group validation rules
  .m-form-field-group.has-own-warnings:not(.has-own-errors):not(.has-field-errors) &,
  .m-form-field-group.has-own-warnings:not(.has-own-errors):not(.has-field-errors) .a-form-field.is-valid & {
    border-color: color(alert, dark);
    color: color(text, dark);
    -webkit-text-fill-color: color(text, dark);
  }

  .m-form-field-group.has-own-errors &,
  .m-form-field-group.has-own-errors .a-form-field.is-valid & {
    border-color: color(error);
    color: color(text, dark);
    -webkit-text-fill-color: color(text, dark);
  }

  .m-form-field-group.has-own-errors.has-field-warnings .a-form-field.has-warning &,
  .m-form-field-group.has-field-errors.has-field-warnings .a-form-field.has-warning & {
    border-color: color(shape);
    color: color(text, dark);
    -webkit-text-fill-color: color(text, dark);
  }

  & + & {
    @include mqDown(small) {
      margin-top: 10px;
    }

    @include mq(small) {
      margin-left: 10px;
    }
  }
}

.a-form-field__input,
.a-form-field__date,
.a-form-field__select {
  transition: background 0.3s, border 0.3s, color 0.3s;
  -webkit-appearance: none;
}

.a-form-field__field-wrapper {
  display: flex;
  flex-flow: row wrap;
  flex: 1;

  @include mq(small) {
    max-width: map-get($formConfig, fieldMaxWidthLarge);
  }
}

.a-form-field__validation-message {
  font-family: font(base);
  font-size: 12px;
  flex: 0 0 100%;

  .a-form-field.has-error & {
    color: color(error);
  }

  .a-form-field.has-warning:not(.has-error) & {
    color: color(alert, dark);
  }
}

::-webkit-input-placeholder {
  color: color(text);
  opacity: 0.6;
}

::-moz-placeholder {
  color: color(text);
  opacity: 0.6;
}

:-ms-input-placeholder {
  color: color(text);
  opacity: 0.6;
}

:-moz-placeholder {
  color: color(text);
  opacity: 0.6;
}

::-ms-clear {
  display: none;
}

input[type="password"]::-ms-reveal,
input[type="password"]::-ms-clear {
  display: none;
}
