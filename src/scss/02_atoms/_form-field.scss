.a-form-field {
  display: flex;
  flex-wrap: wrap;
  border-radius: map-get($formConfig, borderRadius);
  transition: background 0.3s;
  padding: map-get($formConfig, formFieldPadding);

  &:hover {
    @include mq(medium) {
      background: color(background, dark);
    }
  }

  @include mq(large) {
    display: grid;
    grid-template-rows: auto;
    grid-template-columns: 30% [mandatory-label] auto [mandatory-content];
    grid-column-gap: 20px;
  }

  &[data-children-count="3"] {
    grid-template-columns: 30% [mandatory-label] 1fr [mandatory-content] 1fr;
  }

  &[data-children-count="4"] {
    grid-template-columns: 30% [mandatory-label] 1fr [mandatory-content] 15% 1fr;
  }
}

.a-form-field__item {
  display: flex;
  flex: 0 0 100%;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-content: flex-start;

  @include mq(small) {
    flex: 0 0 calc(70% - 20px);
    flex-direction: row;
    align-items: center;
  }

  @include mq(large) {
    flex: 1 0 auto;
  }

  // Take the first, third an so on..
  &:nth-child(odd) {

    @include mq(small) {
      flex: 0 0 30%;
      padding-right: 20px;
    }

    @include mq(large) {
      flex: 1 0 auto;
      padding-right: 0;
    }
  }

  &:nth-child(3n),
  &:nth-child(3n+1) {
    margin-top: 20px;

    @include mq(medium) {
      margin-top: 0;
    }
  }
}

.a-form-field__input,
.a-form-field__date,
.a-form-field__textarea,
.a-form-field__select,
.a-form-field__custom-select,
.a-form-field__autocomplete {
  font-family: font(light);
  font-size: 14px;
  outline: none;
  width: 100%;

  &.is-small {
    max-width: map-get($formConfig, fieldMaxWidthSmall);
  }

  &.is-medium {
    max-width: map-get($formConfig, fieldMaxWidthMedium);
  }

  &.is-large {
    max-width: map-get($formConfig, fieldMaxWidthLarge);
  }

  .a-form-field.has-error & {
    border-color: color(error);
  }

  .a-form-field.has-warning:not(.has-error) & {
    border-color: color(alert, dark);
  }

  .a-form-field.is-valid:not(.is-pristine) & {
    border-color: color(brandAlt, dark);
  }
}

.a-form-field__input,
.a-form-field__date,
.a-form-field__select,
.a-form-field__textarea {
  transition: background 0.3s, border 0.3s, color 0.3s;
  -webkit-appearance: none;
}

.a-form-field__field-wrapper {
  display: flex;
  flex-flow: column;
  position: relative;

  @include mqDown(small) {
    flex: 1;
  }

  @include mq(small) {
    max-width: map-get($formConfig, fieldMaxWidthLarge);
    padding: map-get($formConfig, formFieldPadding) / 2;
  }
}

.a-form-field__error,
.a-form-field__warning {
  flex-wrap: wrap;
  flex: 0 0 100%;
  font-size: size(xsmall);
  // Be sure this will always be the latter in every.
  order: 99;
}

.a-form-field__error {
  color: color(error);
}

.a-form-field__warning {
  color: color(alert, dark);
}


