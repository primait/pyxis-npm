html {
  box-sizing: border-box;
  font-size: size(root);
  overflow-x: hidden;

  @include mq(medium) {
    font-size: size(root);
    line-height: lineHeight(root);
  }

  @include mq(xlarge) {
    font-size: map-get($fontSizes, root) * $largeScreenRatio;
  }
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  margin: 0;
  -webkit-font-smoothing: antialiased;
  box-sizing: border-box;
  font-family: font(light);
  font-size: inherit;
  height: 100%;
  width: 100%;
  @extend .fs-small;

  @include mq(small) {
    font-size: size(small);
    line-height: lineHeight(small);
  }

  @include mq(medium) {
    font-size: size(base);
    line-height: lineHeight(base);
  }
}

h1,
h2,
h3,
h4 {
  margin-bottom: rem(20px);

  @include mq(small) {
    margin-bottom: rem(30px);
  }
}

input,
textarea,
select,
button {
  font-size: inherit;
}

input[type="password"]::-ms-reveal,
input[type="password"]::-ms-clear {
  display: none;
}

p {
  margin: 0;
  
  & + & {
    margin-top: rem(15px);

    @include mq(small) {
      margin-top: rem(20px);
    }
  }
}

hr {
  background-color: color(shape, base);
  border: none;
  height: 1px;
  margin: rem(30px) 0;

  @include mq(small) {
    margin: rem(40px) 0;
  }
}

a {
  text-decoration: none; 
}

ul:not(.a-list) {
  list-style: none;
  margin: 0;
  padding: 0;
}

::-webkit-input-placeholder {
  color: color(text);
  opacity: map-get($formConfig, fieldPlaceholderOpacity);
}

::-moz-placeholder {
  color: color(text);
  opacity: map-get($formConfig, fieldPlaceholderOpacity);
}

:-ms-input-placeholder {
  color: color(text);
  opacity: map-get($formConfig, fieldPlaceholderOpacity);
}

:-moz-placeholder {
  color: color(text);
  opacity: map-get($formConfig, fieldPlaceholderOpacity);
}

::-ms-clear {
  display: none;
}

