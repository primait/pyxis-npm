@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

@function capitalize($str) {
  @return to_upper_case(str_slice($str, 1, 1)) + str_slice($str, 2, -1);
}

@function color($color, $variation: base) {
  @if( map-has-key($colors, $color) ) {
    @return map-deep-get($colors, $color, $variation);
  }
  @else {
    @error "Color `#{$color}` not found in `$colors` map, which is #{$colors}.";
  }
}

@function font($font) {
  @if( map-has-key($fonts, $font) ) {
    @return map-get($fonts, $font);
  }
  @else {
    @error "Font `#{$font}` not found in `$fonts` map, which is #{$fonts}.";
  }
}

@function size($size) {
  @if( map-has-key($fontSizes, $size) ) {
    @return map-get($fontSizes, $size);
  }
  @else {
    @error "Font `#{$size}` not found in `$fontSizes` map, which is #{$fontSizes}.";
  }
}

@function lineHeight($size) {
  @if( map-has-key($fontSizes, $size) ) {
    @return map-get($fontSizes, $size) * $goldenRatio;
  }
  @else {
    @error "Font `#{$size}` not found in `$fontSizes` map, which is #{$fontSizes}.";
  }
}

@function containerWidth($container: base) {
  @if($container == base) {
    @return calc(100% - #{rem($containerGutter)} - #{rem($containerGutter)});
  }
  @else if( map-has-key($containerConfig, $container) ) {
    @return map-get($containerConfig, $container);
  }
  @else {
    @error "Container `#{$container}` not found in `$containerConfig` map, which is #{$containerConfig}.";
  }
}

@function zIndex($key) {
  @return index($zIndexes, $key);
}