.m-form-field-list {
  align-items: flex-start;
  border-radius: map-get($formConfig, borderRadius);
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  padding: map-get($formConfig, formFieldPadding);
  position: relative;
  transition: background 0.3s;

  &:hover {
    @include mq(medium) {
      background: color(background, dark);
    }
  }

  @include mq(small) {
    padding: map-get($formConfig, formFieldPadding) / 2;
  }

  .a-form-field {
    margin: (map-get($formConfig, formFieldPadding) / 2) 0;
    min-height: 0;
    padding: 0;
    width: 100%;

    @include mq(small) {
      padding: 5px;
      width: auto;
      margin: 0;
    }
  }

  .a-form-field__field-wrapper {
    padding: 0;
  }
}

.m-form-field-list__fields-row {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
}

.m-form-field-list__fields-wrapper {
  display: flex;
  flex-flow: column;
  position: relative;

  @include mqDown(small) {
    flex: 1;
  }

  @include mq(small) {
    max-width: map-get($formConfig, fieldMaxWidthLarge);
  }
}

.m-form-field-list__validation-messages-list {
  display: flex;
  flex-direction: column;
  font-family: font(base);
  font-size: 12px;
  padding: 0 5px;
}

.m-form-field-list__validation-message-list__item {
  display: flex;

  .m-form-field-list.has-field-errors &,
  .m-form-field-list.has-own-errors & {
    color: color(error);
  }

  .m-form-field-list.has-field-warnings:not(.has-own-errors):not(.has-field-errors) & {
    color: color(alert, dark);
  }
  .m-form-field-list.has-own-warnings:not(.has-own-errors):not(.has-field-errors) & {
    color: color(alert, dark);
  }
}
